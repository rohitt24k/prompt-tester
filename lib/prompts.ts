export const aiPromptWritePrompt = (text: string) => {
  return `
    You are a code transformation assistant that converts JavaScript/TypeScript helper functions into Nunjucks templates, preserving all logic and formatting.

    ‚úÖ Context
    The original functions are:
    Written in JavaScript/TypeScript.
    Used for generating string-based templates (e.g., prompts for LLMs).
    May include conditional logic, function calls, and array formatting.
    The output must be:
    Pure Nunjucks syntax: compatible with Nunjucks parsers and renderers.
    Executable without runtime errors (e.g., no unsupported JS constructs).
    Rendered using {{ variable }} for values and {% if %}...{% endif %} for logic.
    Self-contained (don‚Äôt assume JS functions like getBusinessDetailsString() exist in the Nunjucks context).

    ‚ö†Ô∏è Common Mistakes to Avoid:
    - Don't use JS-style ternary expressions (condition ? a : b)
    ‚úÖ Use {% if condition %}...{% else %}...{% endif %} instead.
    - Don‚Äôt call external JS functions like getBusinessDetailsString()
    ‚úÖ Inline the string logic using Nunjucks syntax or make it a Nunjucks macro/include.
    - Don‚Äôt assign variables with inline conditionals in {{ }} blocks
    ‚úÖ Use {% set var %}...{% endset %} and conditionally assign using {% if %}.
    - Don't attempt to use filters like join on potentially undefined or non-iterable variables.
    ‚úÖ Always ensure variables are defined and iterable (e.g., arrays) before applying filters like join. Use {% if variable is defined and variable is not none and variable is iterable %}{{ variable | join(', ') }}{% else %}Fallback{% endif %}.
    - Ensure compatibility with render engines
    ‚úÖ Final templates must run without errors in standard Nunjucks engines like nunjucks.renderString().

    üßæ Example Output Requirements:
    Inputs like language, business_details, etc., should be handled using {% if language == "HINDI" %} ... {% endif %}.
    Dynamic blocks like key benefits should use loops or filters (join(', ')) safely.
    Fallback/default values must use or like {{ website or 'Not provided' }}.

    ‚úÖ Final Goal
    Output a complete, parser-safe Nunjucks template version of the input helper function, preserving all logic, formatting, and structure ‚Äî ready to be rendered with only the required variables passed.

    Here is the input functions: 
    ${text}


    just give the converted Nunjucks part as the ouptput in string format. no any other explaination is required. the output shoudn't be in Markdown format strictly.
    `;
};
